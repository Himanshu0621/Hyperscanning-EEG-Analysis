% Hyperscanning with percentiles and zscores and normalization of the
% compleate eeg
close all; clear; clc;

%%% Add EEG Lab and data paths
addpath('eeglab2025.0.0\');
addpath('Hyperscanning Project Data\');

%%% Load EEG channel locations
load('gtec_eeglab_64chanlocs'); % loads 'chanlocs'

%%% Start EEGLAB
eeglab('nogui');

%%% File list
filenames = {
    'Hyperscanning Project Data\subject_01_cleaned.mat',
    'Hyperscanning Project Data\subject_02_cleaned.mat'
};

%%% Preallocate storage
numSubjects = length(filenames);
numTrials = 4;
standardized_eegs = cell(numSubjects, numTrials);  % Store preprocessed EEGs
all_eeg_values = [];  % For global color scaling

%%% === STEP 1: Preprocess and accumulate values ===
for subjectNum = 1:2
    load(filenames{subjectNum});

    for trialNum = 1:2
        % Load and preprocess EEG
        eeg = double(data{trialNum});

        % Bandpass filter (theta 4â€“8 Hz)
        b = fir1(1000, [4 8]/(250/2), 'bandpass');
        eeg = filtfilt(b, 1, eeg.').';  % transpose -> filter -> transpose back

        % Downsample (e.g., every 10th sample)
        eeg = eeg(:, 1:10:end);

        % Z-score normalization of the compleate eeg 
        global_mean = mean(eeg(:));
        global_std = std(eeg(:));
        eeg = (eeg - global_mean) / global_std;


        % Store standardized EEG and accumulate values
        standardized_eegs{subjectNum, trialNum} = eeg;
        all_eeg_values = [all_eeg_values; eeg(:)];
    end
end

%%% === STEP 2: Compute global colorbar limits ===
low = prctile(all_eeg_values, 1);
high = prctile(all_eeg_values, 99);
colorbarLimit = [-2.4714, 2.4714];

disp(['Global colorbar limits: ', num2str(colorbarLimit(1)), ' to ', num2str(colorbarLimit(2))]);



%%% === STEP 3: Plot & Save Videos ===
for subjectNum = 1:2
    for trialNum = 1:2
        eeg = standardized_eegs{subjectNum, trialNum};

        % Video setup
        videoName = ['eeg_video_subject', num2str(subjectNum), '_trialNumber', num2str(trialNum),'_NormalizedAllData'];
        videoSubject = VideoWriter(videoName, 'Motion JPEG AVI');
        videoSubject.Quality   = 75;
        videoSubject.FrameRate = 20;
        open(videoSubject);

        % Plot topography frame by frame
        figure;
        for timePoint = 1:(25*180)  
            topoplot(eeg(:,timePoint), chanlocs, 'maplimits', colorbarLimit);
            clim(colorbarLimit);
            colorbar;
            colormap turbo;
            frame = getframe(gcf);
            writeVideo(videoSubject, frame);
            clf;
        end

        close(videoSubject);
        close all;
    end
end
